---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: loki
  namespace: logging
  labels:
    app: loki
automountServiceAccountToken: true
---
apiVersion: v1
kind: Service
metadata:
  name: loki
  namespace: logging
  labels:
    app: loki
spec:
  ports:
    - name: http-metrics
      protocol: TCP
      port: 3100
      targetPort: http-metrics
    - name: grpc
      port: 9095
      targetPort: grpc
      protocol: TCP
  selector:
    app: loki
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: loki-headless
  namespace: logging
  labels:
    app: loki
spec:
  ports:
    - name: http-metrics
      protocol: TCP
      port: 3100
      targetPort: http-metrics
  selector:
    app: loki
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: loki-memberlist
  namespace: logging
  labels:
    app: loki
spec:
  ports:
    - name: http
      protocol: TCP
      port: 7946
      targetPort: memberlist-port
  selector:
    app: loki
  type: ClusterIP
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: loki-clusterrole
  namespace: logging
  labels:
    app: loki
rules:
  - verbs:
      - get
      - watch
      - list
    apiGroups: [""]
    resources:
      - configMaps
      - secrets
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: loki-clusterrolebinding
  labels:
    app: loki
subjects:
  - kind: ServiceAccount
    name: loki
    namespace: logging
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: loki-clusterrole
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: loki
  namespace: logging
  labels:
    app: loki
data:
  config.yaml: |
    auth_enabled: false
    common:
      compactor_address: 'loki'
      path_prefix: /var/loki
      replication_factor: 1
      storage:
        filesystem:
          chunks_directory: /var/loki/chunks
          rules_directory: /var/loki/rules
    compactor:
      compaction_interval: 60m
      retention_delete_delay: 2h
      retention_delete_worker_count: 150
      retention_enabled: true
    frontend:
      compress_responses: true
      max_outstanding_per_tenant: 4096
    index_gateway:
      mode: ring
    limits_config:
      enforce_metric_name: false
      max_cache_freshness_per_query: 10m
      reject_old_samples: true
      reject_old_samples_max_age: 168h
      retention_period: 90d
      retention_stream:
      - period: 30d
        priority: 10
        selector: '{namespace="kube-system"}'
      - period: 30d
        priority: 11
        selector: '{namespace="logging"}'
      - period: 30d
        priority: 12
        selector: '{namespace="monitoring"}'
    memberlist:
      join_members:
      - loki-memberlist
    querier:
      max_concurrent: 2048
    query_range:
      align_queries_with_step: true
      parallelise_shardable_queries: false
    query_scheduler:
      max_outstanding_requests_per_tenant: 4096
    ruler:
      storage:
        type: local
    runtime_config:
      file: /etc/loki/runtime-config/runtime-config.yaml
    schema_config:
      configs:
      - from: "2020-10-24"
        index:
          period: 24h
          prefix: index_
        object_store: filesystem
        schema: v11
        store: boltdb-shipper
      - from: "2023-09-12"
        index:
          period: 24h
          prefix: index_
        object_store: filesystem
        schema: v12
        store: tsdb
    server:
      grpc_listen_port: 9095
      http_listen_port: 3100
    storage_config:
      hedging:
        at: "250ms"
        max_per_second: 20
        up_to: 3
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: loki-runtime
  namespace: logging
  labels:
    app: loki
data:
  runtime-config.yaml: |
    {}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: loki
  namespace: logging
  labels:
    app: loki
spec:
  replicas: 1
  selector:
    matchLabels:
      app: loki
  template:
    metadata:
      labels:
        app: loki
      annotations:
        prometheus.io/port: http-metrics
        prometheus.io/scrape: 'true'
    spec:
      volumes:
        - name: tmp
          emptyDir: {}
        - name: config
          configMap:
            name: loki
        - name: runtime-config
          configMap:
            name: loki-runtime
        - name: storage
          persistentVolumeClaim:
            claimName: nfs-pvc-loki
      containers:
        - name: loki
          image: grafana/loki:2.9.0
          imagePullPolicy: IfNotPresent
          args:
            - -config.file=/etc/loki/config/config.yaml
            - -target=all
          ports:
            - name: http-metrics
              containerPort: 3100
              protocol: TCP
            - name: grpc
              containerPort: 9095
              protocol: TCP
            - name: memberlist-port
              containerPort: 7946
              protocol: TCP
          resources:
            limits:
              cpu: 1000m
              memory: 2Gi
            requests:
              cpu: 10m
              memory: 128Mi
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: config
              mountPath: /etc/loki/config
            - name: runtime-config
              mountPath: /etc/loki/runtime-config
            - name: storage
              mountPath: /var/loki
          livenessProbe:
            httpGet:
              path: /ready
              port: http-metrics
              scheme: HTTP
            initialDelaySeconds: 45
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /ready
              port: http-metrics
              scheme: HTTP
            initialDelaySeconds: 45
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
      restartPolicy: Always
      terminationGracePeriodSeconds: 4800
      dnsPolicy: ClusterFirst
      serviceAccountName: loki
      serviceAccount: loki
      automountServiceAccountToken: true
      enableServiceLinks: true
      securityContext:
        runAsUser: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        fsGroup: 10001
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app: loki
              topologyKey: kubernetes.io/hostname
      schedulerName: default-scheduler
  serviceName: loki-headless
  podManagementPolicy: Parallel
  updateStrategy:
    type: RollingUpdate
  revisionHistoryLimit: 10
...
